pragma circom 2.0.0;

/*This circuit template checks that c is the multiplication of a and b.*/  

template Multiplier2 () {  

   // Declaration of signals.  
   signal input a[100];  
   signal input b[100];  
   signal output c[100];  

   signal x[100];  
   signal y[100];  


   x[0] <== a[0] + 1;
   y[0] <== b[0] * 2;
   c[0] <== x[0] * y[0];

   x[1] <== a[1] + 1;
   y[1] <== b[1] * 2;
   c[1] <== x[1] * y[1];

   x[2] <== a[2] + 1;
   y[2] <== b[2] * 2;
   c[2] <== x[2] * y[2];

   x[3] <== a[3] + 1;
   y[3] <== b[3] * 2;
   c[3] <== x[3] * y[3];

   x[4] <== a[4] + 1;
   y[4] <== b[4] * 2;
   c[4] <== x[4] * y[4];

   x[5] <== a[5] + 1;
   y[5] <== b[5] * 2;
   c[5] <== x[5] * y[5];

   x[6] <== a[6] + 1;
   y[6] <== b[6] * 2;
   c[6] <== x[6] * y[6];

   x[7] <== a[7] + 1;
   y[7] <== b[7] * 2;
   c[7] <== x[7] * y[7];

   x[8] <== a[8] + 1;
   y[8] <== b[8] * 2;
   c[8] <== x[8] * y[8];

   x[9] <== a[9] + 1;
   y[9] <== b[9] * 2;
   c[9] <== x[9] * y[9];

   x[10] <== a[10] + 1;
   y[10] <== b[10] * 2;
   c[10] <== x[10] * y[10];

   x[11] <== a[11] + 1;
   y[11] <== b[11] * 2;
   c[11] <== x[11] * y[11];

   x[12] <== a[12] + 1;
   y[12] <== b[12] * 2;
   c[12] <== x[12] * y[12];

   x[13] <== a[13] + 1;
   y[13] <== b[13] * 2;
   c[13] <== x[13] * y[13];

   x[14] <== a[14] + 1;
   y[14] <== b[14] * 2;
   c[14] <== x[14] * y[14];

   x[15] <== a[15] + 1;
   y[15] <== b[15] * 2;
   c[15] <== x[15] * y[15];

   x[16] <== a[16] + 1;
   y[16] <== b[16] * 2;
   c[16] <== x[16] * y[16];

   x[17] <== a[17] + 1;
   y[17] <== b[17] * 2;
   c[17] <== x[17] * y[17];

   x[18] <== a[18] + 1;
   y[18] <== b[18] * 2;
   c[18] <== x[18] * y[18];

   x[19] <== a[19] + 1;
   y[19] <== b[19] * 2;
   c[19] <== x[19] * y[19];

      x[20] <== a[20] + 1;
   y[20] <== b[20] * 2;
   c[20] <== x[20] * y[20];

   x[21] <== a[21] + 1;
   y[21] <== b[21] * 2;
   c[21] <== x[21] * y[21];

   x[22] <== a[22] + 1;
   y[22] <== b[22] * 2;
   c[22] <== x[22] * y[22];

   x[23] <== a[23] + 1;
   y[23] <== b[23] * 2;
   c[23] <== x[23] * y[23];

   x[24] <== a[24] + 1;
   y[24] <== b[24] * 2;
   c[24] <== x[24] * y[24];

   x[25] <== a[25] + 1;
   y[25] <== b[25] * 2;
   c[25] <== x[25] * y[25];

   x[26] <== a[26] + 1;
   y[26] <== b[26] * 2;
   c[26] <== x[26] * y[26];

   x[27] <== a[27] + 1;
   y[27] <== b[27] * 2;
   c[27] <== x[27] * y[27];

   x[28] <== a[28] + 1;
   y[28] <== b[28] * 2;
   c[28] <== x[28] * y[28];

   x[29] <== a[29] + 1;
   y[29] <== b[29] * 2;
   c[29] <== x[29] * y[29];

      x[30] <== a[30] + 1;
   y[30] <== b[30] * 2;
   c[30] <== x[30] * y[30];

   x[31] <== a[31] + 1;
   y[31] <== b[31] * 2;
   c[31] <== x[31] * y[31];

   x[32] <== a[32] + 1;
   y[32] <== b[32] * 2;
   c[32] <== x[32] * y[32];

   x[33] <== a[33] + 1;
   y[33] <== b[33] * 2;
   c[33] <== x[33] * y[33];

   x[34] <== a[34] + 1;
   y[34] <== b[34] * 2;
   c[34] <== x[34] * y[34];

   x[35] <== a[35] + 1;
   y[35] <== b[35] * 2;
   c[35] <== x[35] * y[35];

   x[36] <== a[36] + 1;
   y[36] <== b[36] * 2;
   c[36] <== x[36] * y[36];

   x[37] <== a[37] + 1;
   y[37] <== b[37] * 2;
   c[37] <== x[37] * y[37];

   x[38] <== a[38] + 1;
   y[38] <== b[38] * 2;
   c[38] <== x[38] * y[38];

   x[39] <== a[39] + 1;
   y[39] <== b[39] * 2;
   c[39] <== x[39] * y[39];

   x[40] <== a[40] + 1;
   y[40] <== b[40] * 2;
   c[40] <== x[40] * y[40];

   x[41] <== a[41] + 1;
   y[41] <== b[41] * 2;
   c[41] <== x[41] * y[41];

   x[42] <== a[42] + 1;
   y[42] <== b[42] * 2;
   c[42] <== x[42] * y[42];

   x[43] <== a[43] + 1;
   y[43] <== b[43] * 2;
   c[43] <== x[43] * y[43];

   x[44] <== a[44] + 1;
   y[44] <== b[44] * 2;
   c[44] <== x[44] * y[44];

   x[45] <== a[45] + 1;
   y[45] <== b[45] * 2;
   c[45] <== x[45] * y[45];

   x[46] <== a[46] + 1;
   y[46] <== b[46] * 2;
   c[46] <== x[46] * y[46];

   x[47] <== a[47] + 1;
   y[47] <== b[47] * 2;
   c[47] <== x[47] * y[47];

   x[48] <== a[48] + 1;
   y[48] <== b[48] * 2;
   c[48] <== x[48] * y[48];

   x[49] <== a[49] + 1;
   y[49] <== b[49] * 2;
   c[49] <== x[49] * y[49];

      x[50] <== a[50] + 1;
   y[50] <== b[50] * 2;
   c[50] <== x[50] * y[50];

   x[51] <== a[51] + 1;
   y[51] <== b[51] * 2;
   c[51] <== x[51] * y[51];

   x[52] <== a[52] + 1;
   y[52] <== b[52] * 2;
   c[52] <== x[52] * y[52];

   x[53] <== a[53] + 1;
   y[53] <== b[53] * 2;
   c[53] <== x[53] * y[53];

   x[54] <== a[54] + 1;
   y[54] <== b[54] * 2;
   c[54] <== x[54] * y[54];

   x[55] <== a[55] + 1;
   y[55] <== b[55] * 2;
   c[55] <== x[55] * y[55];

   x[56] <== a[56] + 1;
   y[56] <== b[56] * 2;
   c[56] <== x[56] * y[56];

   x[57] <== a[57] + 1;
   y[57] <== b[57] * 2;
   c[57] <== x[57] * y[57];

   x[58] <== a[58] + 1;
   y[58] <== b[58] * 2;
   c[58] <== x[58] * y[58];

   x[59] <== a[59] + 1;
   y[59] <== b[59] * 2;
   c[59] <== x[59] * y[59];

      x[60] <== a[60] + 1;
   y[60] <== b[60] * 2;
   c[60] <== x[60] * y[60];

   x[61] <== a[61] + 1;
   y[61] <== b[61] * 2;
   c[61] <== x[61] * y[61];

   x[62] <== a[62] + 1;
   y[62] <== b[62] * 2;
   c[62] <== x[62] * y[62];

   x[63] <== a[63] + 1;
   y[63] <== b[63] * 2;
   c[63] <== x[63] * y[63];

   x[64] <== a[64] + 1;
   y[64] <== b[64] * 2;
   c[64] <== x[64] * y[64];

   x[65] <== a[65] + 1;
   y[65] <== b[65] * 2;
   c[65] <== x[65] * y[65];

   x[66] <== a[66] + 1;
   y[66] <== b[66] * 2;
   c[66] <== x[66] * y[66];

   x[67] <== a[67] + 1;
   y[67] <== b[67] * 2;
   c[67] <== x[67] * y[67];

   x[68] <== a[68] + 1;
   y[68] <== b[68] * 2;
   c[68] <== x[68] * y[68];

   x[69] <== a[69] + 1;
   y[69] <== b[69] * 2;
   c[69] <== x[69] * y[69];

      x[70] <== a[70] + 1;
   y[70] <== b[70] * 2;
   c[70] <== x[70] * y[70];

   x[71] <== a[71] + 1;
   y[71] <== b[71] * 2;
   c[71] <== x[71] * y[71];

   x[72] <== a[72] + 1;
   y[72] <== b[72] * 2;
   c[72] <== x[72] * y[72];

   x[73] <== a[73] + 1;
   y[73] <== b[73] * 2;
   c[73] <== x[73] * y[73];

   x[74] <== a[74] + 1;
   y[74] <== b[74] * 2;
   c[74] <== x[74] * y[74];

   x[75] <== a[75] + 1;
   y[75] <== b[75] * 2;
   c[75] <== x[75] * y[75];

   x[76] <== a[76] + 1;
   y[76] <== b[76] * 2;
   c[76] <== x[76] * y[76];

   x[77] <== a[77] + 1;
   y[77] <== b[77] * 2;
   c[77] <== x[77] * y[77];

   x[78] <== a[78] + 1;
   y[78] <== b[78] * 2;
   c[78] <== x[78] * y[78];

   x[79] <== a[79] + 1;
   y[79] <== b[79] * 2;
   c[79] <== x[79] * y[79];

      x[80] <== a[80] + 1;
   y[80] <== b[80] * 2;
   c[80] <== x[80] * y[80];

   x[81] <== a[81] + 1;
   y[81] <== b[81] * 2;
   c[81] <== x[81] * y[81];

   x[82] <== a[82] + 1;
   y[82] <== b[82] * 2;
   c[82] <== x[82] * y[82];

   x[83] <== a[83] + 1;
   y[83] <== b[83] * 2;
   c[83] <== x[83] * y[83];

   x[84] <== a[84] + 1;
   y[84] <== b[84] * 2;
   c[84] <== x[84] * y[84];

   x[85] <== a[85] + 1;
   y[85] <== b[85] * 2;
   c[85] <== x[85] * y[85];

   x[86] <== a[86] + 1;
   y[86] <== b[86] * 2;
   c[86] <== x[86] * y[86];

   x[87] <== a[87] + 1;
   y[87] <== b[87] * 2;
   c[87] <== x[87] * y[87];

   x[88] <== a[88] + 1;
   y[88] <== b[88] * 2;
   c[88] <== x[88] * y[88];

   x[89] <== a[89] + 1;
   y[89] <== b[89] * 2;
   c[89] <== x[89] * y[89];

      x[90] <== a[90] + 1;
   y[90] <== b[90] * 2;
   c[90] <== x[90] * y[90];

   x[91] <== a[91] + 1;
   y[91] <== b[91] * 2;
   c[91] <== x[91] * y[91];

   x[92] <== a[92] + 1;
   y[92] <== b[92] * 2;
   c[92] <== x[92] * y[92];

   x[93] <== a[93] + 1;
   y[93] <== b[93] * 2;
   c[93] <== x[93] * y[93];

   x[94] <== a[94] + 1;
   y[94] <== b[94] * 2;
   c[94] <== x[94] * y[94];

   x[95] <== a[95] + 1;
   y[95] <== b[95] * 2;
   c[95] <== x[95] * y[95];

   x[96] <== a[96] + 1;
   y[96] <== b[96] * 2;
   c[96] <== x[96] * y[96];

   x[97] <== a[97] + 1;
   y[97] <== b[97] * 2;
   c[97] <== x[97] * y[97];

   x[98] <== a[98] + 1;
   y[98] <== b[98] * 2;
   c[98] <== x[98] * y[98];

   x[99] <== a[99] + 1;
   y[99] <== b[99] * 2;
   c[99] <== x[99] * y[99];


}

 component main = Multiplier2();